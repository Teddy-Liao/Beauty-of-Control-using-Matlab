% 搭建离散卡尔曼滤波器
% 理论模型如下 - 五大经典卡尔曼滤波方程
% /************** 先验状态估计 ****************/
% xk(-) = A * x(k-1)(+) + B * u(k-1)
% /************** 先验状态估计误差协方差矩阵 ****************/
% P(-) = A * P(+) * A^T + Qc  
% /************** 卡尔曼增益系数 ****************/
% K = P(-) * H^T * (Rc + H * P(-) * H^T)^-1
% /************** 后验估计 ****************/
% x(+) = x(-) + K * (z - H * x(-))
% /************** 后验状态估计误差协方差矩阵 ****************/
% P(+) = (I - K * H) * P(-) 


% A B         —— 状态空间方程中的矩阵
% Q_c         —— 过程噪声w的协方差矩阵
% R_c         —— 测量噪声v的协方差矩阵
% H           —— 测量矩阵
% z           —— 测量值
% x_hat       —— x的后验估计
% x_hat_minus —— x的先验估计
% P           —— 先验状态估计误差协方差矩阵
% u           —— 输入
function [x_hat, x_hat_minus, P] = F8_LinearKalmanFilter(A,B,Q_c,R_c,H,z,x_hat,P,u)

    % 先验状态估计
    x_hat_minus = A * x_hat + B * u;
    % 先验状态估计误差协方差矩阵
    P_minus = A * P * transpose(A) + Q_c;
    % 卡尔曼增益系数
    K = P_minus * transpose(H) * pinv (H * P_minus * transpose(H) + R_c); 
    % 这里用到了伪逆的概念
    % 分母矩阵的行列式为0， 这意味着这个矩阵是奇异的，因此不能被逆。这是导致您在MATLAB中遇到Nan问题的原因。

    % 后验估计
    x_hat = x_hat_minus + K * (z - H *x_hat_minus);
    % 后验状态估计误差协方差矩阵
    P = (eye(size(A,1)) - K * H) * P_minus;

end
